openapi: "3.0.0"
info:
  description: API Reference
  version: 1.0.0
  title: Python Flask RESTful API
servers:
  - url: http://localhost:5000
paths:
  /users:
    get:
      tags:
        - User
      summary: Find users
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "204":
          description: Users not found
        "400":
          description: Invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: bad request
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: internal server error
  /users/{id}:
    get:
      tags:
        - User
      summary: Find user by ID
      parameters:
        - name: id
          in: path
          description: User id
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: Deed not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: not found
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: internal server error
  /foods/{name}:
    get:
      tags:
        - Foods
      summary: Find food by name
      parameters:
        - name: name
          in: path
          description: string food name
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/foodSchemas"
        "400":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: not found
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: internal server error
    post:
      tags:
        - Deed
      summary: Add a new deed
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                customer_id:
                  type: integer
                deed_name:
                  type: string
                address:
                  type: string
                latitude:
                  type: number
                longitude:
                  type: number
                fileName:
                  type: string
                  format: binary
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: success
        '400':
          description: Invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: bad request
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: internal server error

  
  /foods/{calories}:
    get:
      tags:
        - Foods
      summary: Find food whice lower than this Calories
      parameters:
        - name: calories
          in: path
          description: Int Food Calories
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/caloriesSchemas"
        "400":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: not found
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: internal server error
                    
  /bmr/{gender}/{height}/{weight}/{age}:
    get:
      tags:
        - Foods
      summary: Find food whice lower than this Calories
      parameters:
        - name: weight
          in: path
          description: Int weight
          schema:
            type: integer
          required: true
        - name: height
          in: path
          description: Int height
          schema:
            type: integer
          required: true
        - name: age
          in: path
          description: Int height
          schema:
            type: integer
          required: true
        - name: gender
          in: path
          description: Int height
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bmrSchemas"
        "400":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: not found
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: internal server error
components:
  schemas:
    User:
      type: object
      required:
        - username
        - firstName
        - lastName
        - email
      properties:
        _id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        subjects:
          type: string
          
    foodSchemas:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        Killocalories:
          type: number
        Alpha-Carotene:
          type: number
        Beta-Carotene:
          type: number
        Carbohtdrate:
          type: number
        Cholesterol:
          type: number
        Choline:
          type: number
        Fiber:
          type: number
        Lycopene:
          type: number
        Manganese:
          type: number
        Protein:
          type: number
        Selenium:
          type: number
        Zinc:
          type: number
        Vitamon-B12:
          type: number
        Vitamin-B6:
          type: number
        Vitamin-C:
          type: number
        Vitamin-E:
          type: number
        Vitamin-K:
          type: number
          
          
    caloriesSchemas:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        Killocalories:
          type: number
          
    bmrSchemas:
      type: object
      required:
        - gender
        - height
        - weight
        - age
      properties:
        bmr:
          type: integer
        